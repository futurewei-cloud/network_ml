#INPUT OF THE SPLIT SCRIPT
#	The binary with the restrcutured dataset generated by restructure.py

#OUTPUT OF THE SPLIT SCRIPT
#	A binary file with the test set
#	A binary file with the training set

#分割脚本的输入
#   具有重构生成的重新剪切数据集的二进制文件restructure.py
#分割脚本的输出
#   带有测试集的二进制文件
#   具有训练集的二进制文件

#Common path to the whole proyect
main_path = 'G:/Anaconda/2'

#Path to the modules folder. Must be a full path
MODULES_PATH = '{}/modules'.format(main_path)

#Path to the dataset file
datapath =  '{}/data'.format(main_path)
DATASET = '{}/restructured/restructured.pickle'.format(datapath)

#Ratio of windows to teh training set vs the test set
#窗口与训练集与测试集的比率
TRAIN_RATE = 0.6  #60%数据做训练集，40%数据做测试集

#Size in bytes to filter low traffic volume windows
#过滤低流量窗口的大小（字节）
FILTER_SIZE = 1024 * 3
def WINDOW_FILTER(CW): #Function to be applied要应用的功能
    return (CW.get_pktSizeSum() > FILTER_SIZE) #把数据包大小总和大于1024*3或者target为idle的保留，其他过滤

#Store split statistics#存储拆分统计信息
STORE_SPLIT_STATISTICS = False
SPLIT_FILE = '{}/results/crossval_split.csv'.format(datapath)

#Output files for the datasets
TRAIN_FILE = '{}/datasets/train.pickle'.format(datapath)
TEST_FILE = '{}/datasets/test.pickle'.format(datapath)

#Enable/disable output
VERBOSE = True
